{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pagination",
  "type": "registry:component",
  "title": "pagination",
  "description": "pagination component.",
  "dependencies": [
    "@iconify/react"
  ],
  "registryDependencies": [
    "https://mieru.wisp.bio/r/styles-abstraction.json",
    "https://mieru.wisp.bio/r/button.json"
  ],
  "files": [
    {
      "path": "src/components/ui/pagination.tsx",
      "content": "import type { Button } from '@/components/ui/button'\nimport type { ComponentProps } from 'react'\nimport { buttonVariants } from '@/components/ui/button'\nimport { cn } from '@/lib/utils'\nimport { Icon } from '@iconify/react'\n\nfunction Pagination({ className, ...props }: ComponentProps<'nav'>) {\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"pagination\"\n      data-slot=\"pagination\"\n      className={cn('mx-auto flex w-full justify-center', className)}\n      {...props}\n    />\n  )\n}\n\nfunction PaginationContent({\n  className,\n  ...props\n}: ComponentProps<'ul'>) {\n  return (\n    <ul\n      data-slot=\"pagination-content\"\n      className={cn('flex flex-row items-center gap-1', className)}\n      {...props}\n    />\n  )\n}\n\nfunction PaginationItem({ ...props }: ComponentProps<'li'>) {\n  return (\n    <li\n      data-slot=\"pagination-item\"\n      {...props}\n    />\n  )\n}\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ComponentProps<typeof Button>, 'size'> &\nComponentProps<'a'>\n\nfunction PaginationLink({\n  className,\n  isActive,\n  size = 'icon',\n  ...props\n}: PaginationLinkProps) {\n  return (\n    <a\n      aria-current={isActive ? 'page' : undefined}\n      data-slot=\"pagination-link\"\n      data-active={isActive}\n      className={cn(\n        buttonVariants({\n          variant: isActive ? 'outline' : 'ghost',\n          size,\n        }),\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction PaginationPrevious({\n  className,\n  ...props\n}: ComponentProps<typeof PaginationLink>) {\n  return (\n    <PaginationLink\n      aria-label=\"Go to previous page\"\n      size=\"default\"\n      className={cn('gap-1 px-2.5 sm:pl-2.5', className)}\n      {...props}\n    >\n      <Icon icon=\"ph:caret-left\" />\n      <span className=\"hidden sm:block\">Previous</span>\n    </PaginationLink>\n  )\n}\n\nfunction PaginationNext({\n  className,\n  ...props\n}: ComponentProps<typeof PaginationLink>) {\n  return (\n    <PaginationLink\n      aria-label=\"Go to next page\"\n      size=\"default\"\n      className={cn('gap-1 px-2.5 sm:pr-2.5', className)}\n      {...props}\n    >\n      <span className=\"hidden sm:block\">Next</span>\n      <Icon icon=\"ph:caret-right\" />\n    </PaginationLink>\n  )\n}\n\nfunction PaginationEllipsis({\n  className,\n  ...props\n}: ComponentProps<'span'>) {\n  return (\n    <span\n      aria-hidden\n      data-slot=\"pagination-ellipsis\"\n      className={cn('flex size-9 items-center justify-center', className)}\n      {...props}\n    >\n      <Icon icon=\"ph:dots-three-bold\" />\n      <span className=\"sr-only\">More pages</span>\n    </span>\n  )\n}\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n",
      "type": "registry:component"
    }
  ]
}