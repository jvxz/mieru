{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navigation-menu",
  "type": "registry:component",
  "title": "navigation-menu",
  "description": "navigation menu component.",
  "dependencies": [
    "@iconify/react",
    "@radix-ui/react-navigation-menu"
  ],
  "registryDependencies": [
    "https://mieru.wisp.bio/r/styles-abstraction.json",
    "https://mieru.wisp.bio/r/button.json"
  ],
  "files": [
    {
      "path": "src/components/ui/navigation-menu.tsx",
      "content": "import type { ComponentProps } from 'react'\nimport { popoverStyles, staticStyles } from '@/lib/styles'\nimport { cn } from '@/lib/utils'\nimport { Icon } from '@iconify/react'\nimport * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu'\nimport { cva } from 'class-variance-authority'\nimport { buttonVariants } from './button'\n\nfunction NavigationMenu({\n  className,\n  children,\n  viewport = true,\n  delayDuration = 10,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.Root> & {\n  viewport?: boolean\n  delayDuration?: number\n}) {\n  return (\n    <NavigationMenuPrimitive.Root\n      data-slot=\"navigation-menu\"\n      data-viewport={viewport}\n      delayDuration={delayDuration}\n      className={cn(\n        'group/navigation-menu relative flex max-w-max flex-1 items-center justify-center',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      {viewport && <NavigationMenuViewport />}\n    </NavigationMenuPrimitive.Root>\n  )\n}\n\nfunction NavigationMenuList({\n  className,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.List>) {\n  return (\n    <NavigationMenuPrimitive.List\n      data-slot=\"navigation-menu-list\"\n      className={cn(\n        'group flex flex-1 list-none items-center justify-center gap-1',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction NavigationMenuItem({\n  className,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.Item>) {\n  return (\n    <NavigationMenuPrimitive.Item\n      data-slot=\"navigation-menu-item\"\n      className={cn('relative', className)}\n      {...props}\n    />\n  )\n}\n\nconst navigationMenuTriggerStyle = cva([buttonVariants({\n  variant: 'ghost',\n}), 'group'])\n\nfunction NavigationMenuTrigger({\n  className,\n  children,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.Trigger>) {\n  return (\n    <NavigationMenuPrimitive.Trigger\n      data-slot=\"navigation-menu-trigger\"\n      className={cn(\n        navigationMenuTriggerStyle(),\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <Icon\n        icon=\"ph:caret-down\"\n        className=\"relative top-px ml-1 size-3\"\n        aria-hidden=\"true\"\n      />\n    </NavigationMenuPrimitive.Trigger>\n  )\n}\n\nfunction NavigationMenuContent({\n  className,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.Content>) {\n  return (\n    <NavigationMenuPrimitive.Content\n      data-slot=\"navigation-menu-content\"\n      className={cn(\n        'data-[motion^=from-]:animate-in data-[motion^=from-]:fade-in data-[motion^=to-]:animate-out data-[motion^=to-]:fade-out group-data-[viewport=true]/navigation-menu:data-[motion=from-end]:slide-in-from-right-52 group-data-[viewport=true]/navigation-menu:data-[motion=from-start]:slide-in-from-left-52 group-data-[viewport=true]/navigation-menu:data-[motion=to-end]:slide-out-to-right-52 group-data-[viewport=true]/navigation-menu:data-[motion=to-start]:slide-out-to-left-52 group-data-[viewport=false]/navigation-menu:bg-card group-data-[viewport=false]/navigation-menu:text-card-foreground group-data-[viewport=false]/navigation-menu:animate-in group-data-[viewport=false]/navigation-menu:fade-in-0 group-data-[viewport=false]/navigation-menu:slide-in-from-top-2 group-data-[viewport=false]/navigation-menu:top-full group-data-[viewport=false]/navigation-menu:mt-1.5 group-data-[viewport=false]/navigation-menu:overflow-hidden group-data-[viewport=false]/navigation-menu:rounded group-data-[viewport=false]/navigation-menu:border group-data-[viewport=false]/navigation-menu:duration-100 top-0 left-0 w-full p-2 pr-2.5 duration-100 ease-out **:data-[slot=navigation-menu-link]:focus:ring-0 **:data-[slot=navigation-menu-link]:focus:outline-none md:absolute md:w-auto',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction NavigationMenuViewport({\n  className,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.Viewport>) {\n  return (\n    <div\n      className={cn('absolute top-full left-0 isolate z-50 flex justify-center')}\n    >\n      <NavigationMenuPrimitive.Viewport\n        data-slot=\"navigation-menu-viewport\"\n        className={cn(\n          staticStyles.base,\n          staticStyles.variant.default,\n          'origin-top-center text-popover-foreground relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden duration-100 data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:slide-in-from-top-2 md:w-[var(--radix-navigation-menu-viewport-width)]',\n          className,\n        )}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction NavigationMenuLink({\n  className,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.Link>) {\n  return (\n    <NavigationMenuPrimitive.Link\n      data-slot=\"navigation-menu-link\"\n      className={cn(\n        popoverStyles.item,\n        'flex cursor-pointer flex-col items-start p-2 whitespace-normal transition-all outline-none',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction NavigationMenuIndicator({\n  className,\n  ...props\n}: ComponentProps<typeof NavigationMenuPrimitive.Indicator>) {\n  return (\n    <NavigationMenuPrimitive.Indicator\n      data-slot=\"navigation-menu-indicator\"\n      className={cn(\n        'top-full z-[1] flex h-1.5 justify-center overflow-hidden',\n        className,\n      )}\n      {...props}\n    >\n      <div className=\"bg-border relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm shadow-md\" />\n    </NavigationMenuPrimitive.Indicator>\n  )\n}\n\nexport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuIndicator,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n  NavigationMenuViewport,\n}\n",
      "type": "registry:component"
    }
  ]
}