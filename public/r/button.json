{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:component",
  "title": "button",
  "description": "button component.",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "src/components/ui/button.tsx",
      "content": "import type { VariantProps } from 'class-variance-authority'\nimport { interactiveStyles } from '@/lib/styles'\nimport { cn } from '@/lib/utils'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva } from 'class-variance-authority'\n\nimport * as React from 'react'\n\nconst buttonVariants = cva(\n  `\n    ${interactiveStyles.base}\n    inline-flex items-center justify-center\n  `,\n  {\n    variants: {\n      variant: {\n        default:\n          interactiveStyles.variant.default,\n        destructive:\n          interactiveStyles.variant.destructive,\n        outline:\n          interactiveStyles.variant.outline,\n        ghost:\n          interactiveStyles.variant.ghost,\n        link:\n          interactiveStyles.variant.link,\n      },\n      size: {\n        default:\n          interactiveStyles.size.default,\n        sm:\n          interactiveStyles.size.sm,\n        lg:\n          interactiveStyles.size.lg,\n        icon:\n          interactiveStyles.size.icon,\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : 'button'\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({\n        variant,\n        size,\n        className,\n      }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n",
      "type": "registry:component"
    }
  ]
}