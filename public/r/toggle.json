{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle",
  "type": "registry:component",
  "title": "toggle",
  "description": "toggle component.",
  "registryDependencies": [
    "toggle"
  ],
  "files": [
    {
      "path": "src/components/ui/toggle.tsx",
      "content": "'use client'\nimport type { VariantProps } from 'class-variance-authority'\nimport { interactiveStyles } from '@/lib/styles'\nimport { cn } from '@/lib/utils'\nimport * as TogglePrimitive from '@radix-ui/react-toggle'\nimport { cva } from 'class-variance-authority'\n\nconst toggleVariants = cva(\n  cn(interactiveStyles.base, `\n    data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\n    p-0\n  `),\n  // `\n  //   hover:bg-muted hover:text-muted-foreground\n  //   data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\n  //   focus-visible:border-ring focus-visible:ring-ring/50\n  //   focus-visible:ring-[3px]\n  //   aria-invalid:ring-destructive/20 aria-invalid:border-destructive\n  //   dark:aria-invalid:ring-destructive/40\n  //   inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium\n  //   whitespace-nowrap transition-[color,box-shadow] outline-none\n  //   disabled:pointer-events-none disabled:opacity-50\n  //   [&_svg]:pointer-events-none [&_svg]:shrink-0\n  //   [&_svg:not([class*='size-'])]:size-4\n  // `,\n  {\n    variants: {\n      variant: {\n        default: [interactiveStyles.variant.ghost, `\n          m-0 border border-transparent\n        `],\n        outline: [interactiveStyles.variant.outline, `\n          data-[state=on]:border-primary/30\n          m-0\n        `],\n      },\n      size: {\n        default: [interactiveStyles.size.default, 'text-sm'],\n        sm: [interactiveStyles.size.sm, 'text-sm'],\n        lg: [interactiveStyles.size.lg, 'text-sm'],\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n)\n\nfunction Toggle({\n  className,\n  variant,\n  size,\n  ...props\n}: React.ComponentProps<typeof TogglePrimitive.Root> &\n  VariantProps<typeof toggleVariants>) {\n  return (\n    <TogglePrimitive.Root\n      data-slot=\"toggle\"\n      className={cn(toggleVariants({\n        variant,\n        size,\n        className,\n      }))}\n      {...props}\n    />\n  )\n}\n\nexport { Toggle, toggleVariants }\n",
      "type": "registry:component"
    }
  ]
}