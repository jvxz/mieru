{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:component",
  "title": "dialog",
  "description": "dialog component.",
  "registryDependencies": [
    "dialog"
  ],
  "files": [
    {
      "path": "src/components/ui/dialog.tsx",
      "content": "'use client'\nimport { interactiveStyles, overlayStyles, staticStyles } from '@/lib/styles'\nimport { cn } from '@/lib/utils'\nimport { Icon } from '@iconify/react'\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\n\nfunction Dialog({ ...props }: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return (\n    <DialogPrimitive.Root\n      data-slot=\"dialog\"\n      {...props}\n    />\n  )\n}\n\nfunction DialogTrigger({ ...props }: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return (\n    <DialogPrimitive.Trigger\n      data-slot=\"dialog-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DialogPortal({ ...props }: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return (\n    <DialogPrimitive.Portal\n      data-slot=\"dialog-portal\"\n      {...props}\n    />\n  )\n}\n\nfunction DialogClose({ ...props }: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return (\n    <DialogPrimitive.Close\n      data-slot=\"dialog-close\"\n      {...props}\n    />\n  )\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        overlayStyles,\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          staticStyles.base,\n          staticStyles.variant.default,\n          `\n            data-[state=open]:animate-in data-[state=open]:fade-in-0\n            data-[state=open]:slide-in-from-bottom-2\n            fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)]\n            translate-x-[-50%] translate-y-[-50%] gap-4\n            sm:max-w-xl\n          `,\n          className,\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className={cn(\n          interactiveStyles.base,\n          interactiveStyles.variant.ghost,\n          interactiveStyles.size.icon,\n          `\n            ring-offset-background absolute top-3 right-3 inline-flex size-6\n            items-center justify-center opacity-70\n          `,\n        )}\n        >\n          <Icon\n            icon=\"ph:x\"\n            className=\"size-4\"\n          />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(`\n        flex flex-col gap-2 text-center\n        sm:text-left\n      `, className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        `\n          flex flex-col-reverse gap-2\n          sm:flex-row sm:justify-end\n        `,\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn('text-lg leading-none font-semibold', className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n",
      "type": "registry:component"
    }
  ]
}